% Example1_3.m% Solution to the problem posed in Example 1.3. It calculates% the critical value of the constant of a proportional controller% above which the system of chemical reactor becomes unstable.% This program evaluate all roots of the denominator of the% transfer function using the Newton-Raphson method with synthetic% division or eigenvalue methods. (p42)clearclc% Input datanum = input(' Vector of coefficients of the numerator polynomial = ');denom = input (' Vector of coefficients of the denominator polynomial = ');disp(' ')Kc1 = input(' Lower limit of the range of search = ');Kc2 = input(' Upper limit of the range of search = ');disp(' ')disp(' 1 ) Newton-Raphson with synthetic division')disp(' 2 ) Eigenvalue method')method = input(' Method of root finding = ');iter = 0;n1 = length(num);n2 = length(denom);c(1:n2-n1) = denom (1:n2-n1);% Main loopwhile abs(Kc1 - Kc2) > .001   iter = iter + 1;   if iter == 1      Kc = Kc1;	                            % Lower limit   elseif iter == 2      Kc = Kc2;	                            % Upper limit   else      Kc = (Kc1 + Kc2) / 2;	                % Next approximation   end      % Calculation of coefficients of canonical form of polynomial   for m = n2-n1+1 : n2;      c(m) = denom(m) + Kc * num(m-n2+n1);   end      % Root finding   switch method   case 1                        % Newton-Raphson with synthetic division      root = NRsdivision(c);   case 2								% Eigenvalue method      root = roots (c);   end   realpart = real (root);   imagpart = imag (root);      % Show the results of calculations of this step   fprintf('\n Kc = %6.4f\n Roots = ',Kc)   for k = 1:length(root)      if isreal(root(k))         fprintf('%7.5g   ',root(k))      else         fprintf('%6.4g',realpart(k))         if imagpart(k) >= 0            fprintf('+%5.4gi   ',imagpart(k))         else            fprintf('-%5.4gi   ',abs(imagpart(k)))         end      end   end   disp(' ')      % Determining stability or unstability of the system   stbl = 1;   for m = 1 : length(root)      if realpart(m) > 0         stbl = 0;	% System is unstable         break;      end   end      if iter == 1      stbl1 = stbl;   elseif iter == 2      stbl2 = stbl;      if stbl1 == stbl2         error('Critical value is outside the range of search.')         break      end   else      if stbl == stbl1         Kc1 = Kc;      else         Kc2 = Kc;      end   endend