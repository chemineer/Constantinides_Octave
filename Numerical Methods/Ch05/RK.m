function [x,y] = RK(ODEfile,xi,xf,h,yi,n,varargin)% RK Solves a set of ordinary differential equations by the%   Runge-Kutta method.%%   [X,Y]=RK('F',XI,XF,H,YI,N) solves a set of ordinary differential%   equations by the Nth-order Runge-Kutta method, from XI to XF.%   The equations are given in the M-file F.M.   H is the length of %   interval. YI is the vector of initial values of the dependent %   variable at XI. N should be an integer from 2 to 5. If there %   are only five input arguments or the sixth input argument is an %   empty matrix, the 2nd-order Runge-Kutta method will be performed.%%   [X,Y]=RK('F',XI,XF,H,YI,N,P1,P2,...) allows for additional%   arguments which are passed to the function F(X,P1,P2,...).%%  See also ODE23, ODE45, ODE113, ODE15S, ODE23S, EULER, MEULER,%           ADAMS, ADAMSMOULTON% (c) N. Mostoufi & A. Constantinides% January 1, 1999% Initializationif isempty(h) | h == 0   h = (xf - xi)/99;endif nargin == 5 | isempty(n) | n < 2 | n > 5   n = 2;endn = fix(n);yi = (yi(:).')';	% Make sure it's a column vectorx = [xi:h:xf];		% Vector of x valuesif x(end) ~= xf   x(end+1) = xf;endd = diff(x);		% Vector of x-incrementsy(:,1) = yi;		% Initial condition% Solutionswitch ncase 2	% 2nd-order Runge-Kutta   for i = 1:length(x)-1      k1 = d(i) * feval(ODEfile,x(i),y(:,i),varargin{:});      k2 = d(i) * feval(ODEfile,x(i+1),y(:,i)+k1,varargin{:});      y(:,i+1) = y(:,i) + (k1+k2)/2;   endcase 3	% 3rd-order Runge-Kutta   for i = 1:length(x)-1      k1 = d(i) * feval(ODEfile,x(i),y(:,i),varargin{:});      k2 = d(i) * feval(ODEfile,x(i)+d(i)/2,y(:,i)+k1/2,varargin{:});      k3 = d(i) * feval(ODEfile,x(i+1),y(:,i)+2*k2-k1,varargin{:});      y(:,i+1) = y(:,i) + (k1+4*k2+k3)/6;   endcase 4	% 4th-order Runge-Kutta   for i = 1:length(x)-1      k1 = d(i) * feval(ODEfile,x(i),y(:,i),varargin{:});      k2 = d(i) * feval(ODEfile,x(i)+d(i)/2,y(:,i)+k1/2, ...         varargin{:});      k3 = d(i) * feval(ODEfile,x(i)+d(i)/2,y(:,i)+k2/2, ...         varargin{:});      k4 = d(i) * feval(ODEfile,x(i+1),y(:,i)+k3,varargin{:});      y(:,i+1) = y(:,i) + (k1+2*k2+2*k3+k4)/6;   endcase 5	% 5th-order Runge-Kutta   for i = 1:length(x)-1      k1 = d(i) * feval(ODEfile,x(i),y(:,i),varargin{:});      k2 = d(i) * feval(ODEfile,x(i)+d(i)/2,y(:,i)+k1/2, ...         varargin{:});      k3 = d(i) * feval(ODEfile,x(i)+d(i)/4,y(:,i)+3*k1/16+k2/16, ...         varargin{:});      k4 = d(i) * feval(ODEfile,x(i)+d(i)/2,y(:,i)+k3/2, ...         varargin{:});      k5 = d(i) * feval(ODEfile,x(i)+3*d(i)/4,y(:,i)-3*k2/16+ ...         6*k3/16+9*k4/16,varargin{:});      k6 = d(i) * feval(ODEfile,x(i+1),y(:,i)+k1/7+4*k2/7+ ...         6*k3/7-12*k4/7+8*k5/7,varargin{:});      y(:,i+1) = y(:,i) + (7*k1+32*k3+12*k4+32*k5+7*k6)/90;   endend