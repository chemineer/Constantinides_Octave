function x = Jacobi(A, c, x0, tol, trace)%JACOBI Solves a set of linear algebraic equations by the%   Jacobi iterative method.%%   JACOBI(A,C,X0) finds unknowns of a set of linear algebraic%   equations. A is the matrix of coefficients, C is the vector%   of constants and X0 is the vector of initial guesses.%%   JACOBI(A,C,X0,TOL,TRACE) finds unknowns of a set of linear%   algebraic equations and uses TOL as the convergence test.%   A nonzero value for TRACE results in showing calculated %   unknowns at the end of each iteration.%%   See also GAUSS, JORDAN% (c) N. Mostoufi & A. Constantinides% January 1, 1999% Initializationif nargin < 4 | isempty(tol)   tol = 1e-6;endif nargin >= 4 & tol == 0   tol = 1e-6;endif nargin < 5 | isempty(trace)   trace = 0;endif trace   fprintf('\n Initial guess :\n')   fprintf('%8.6g  ',x0)endc = (c(:).')';		% Make sure it's a column vectorx0 = (x0(:).')';	% Make sure it's a column vectorn = length(c);[nr nc] = size(A);% Check coefficient matrix, vector of constants and% vector of unknownsif nr ~= nc   error('Coefficient matrix is not square.')endif nr ~= n   error('Coefficient matrix and vector of constants do not have the same length.')endif length(x0) ~= n   error('Vector of unknowns and vector of constants do not have the same length.')end% Check if the coefficient matrix is singularif det(A) == 0   fprintf('\n Rank = %7.3g\n',rank(A))   error('The coefficient matrix is singular.')end% Building modified coefficient matrix and modified% vector of coefficientsD = diag(diag(A));		% The diagonal matrixa0 = inv(D)*A - eye(n);	% Modified matrix of coefficientsc0 = inv(D)*c;				% Modified vector of constantsx = x0;x0 = x + 2 * tol;iter = 0;% Substitution procedurewhile max(abs(x - x0)) >= tol   x0 = x;   x = c0 - a0 * x0;   if trace      iter = iter + 1;      fprintf('\n Iteration no. %3d\n',iter)      fprintf('%8.6g  ',x)   endend