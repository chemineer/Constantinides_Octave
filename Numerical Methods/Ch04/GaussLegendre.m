function Q = GaussLegendre(funfcn,a,b,h,n,varargin)%GAUSSLEGENDRE Gauss-Legendre quadrature%   GAUSSLEGENDRE('F',A,B,H,N) numerically evaluates the integral%   of the function described by M-file F.M from A to B, using%   interval spacing H, by a N-point Gauss-Legendre quadrature.%%   GAUSSLEGENDRE('F',A,B,[],[],P1,P2,...) calculates the%   integral using interval spacing H=B-A and N=2 and also allows%   parameters P1, P2, ... to pass directly to function F.M%%   See also QUAD, QUAD8, TRAPZ, SIMPSON% (c) N. Mostoufi & A. Constantinides% January 1, 1999% Checking input argumentsif nargin < 4 | isempty(h) | h == 0 | abs(b - a) < abs(h)   h = b - a;endif nargin < 5 | isempty(n) | n < 2   n = 2;endif sign(h) ~= sign(b-a)   h = - h;endn = fix(n);% Coefficients of the Legendre polynomialfor k = 0 : n/2   cl(2*k+1) = (-1)^k * gamma(2*n - 2*k + 1) / ...      (2^n * gamma(k + 1) * gamma(n - k + 1) * gamma(n - 2*k + 1));   if k < n/2      cl(2*k+2) = 0;   endendz = roots(cl);	% Roots of the Legendre polynomial (Zi)% Weight factorsfor p = 1 : n   B = [1 0];   k = 0;   denom = 1;   A(1) = B(1);   % Constructing vector of coefficients of the   % Lagrange polynomial (coefficients of Li)   for q = 1 : n      if q ~= p         k = k + 1;         for r = 2 : k+1            A(r) = B(r) - B(r-1) * z(q);	% Vector of coefficients         end         denom = denom * (z(p) - z(q));	% Denominator of Li      end      B = [A 0];   end   % Vector of coefficients of integral of Lagrange polynomial   for k = 1 : n      % Ai are coefficients of the integral polynomial      Ai(k) = A(k) / (n - k + 1);   end   Ai(n + 1) = 0;   % weight factor Wi   w(p) = (polyval(Ai , 1) - polyval(Ai , -1)) / denom;   clear AendQ = 0;% Integrationfor x = a : h : b - h   for p = 1 : n      xp = x + (z(p) + 1) * h / 2;      Q = Q + w(p) * feval(funfcn , xp , varargin{:}) * h /2;   endend% Integral of the reminder interval (if (b-a)/h is not an integer)xr = x + h;hr = b - (x + h);if hr > 0   for p = 1 : n      xp = xr + (z(p) + 1) * hr / 2;      Q = Q + w(p) * feval(funfcn , xp , varargin{:}) * hr /2;   endend